// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/BuffInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BuffInfo {

  /// <summary>Holder for reflection information generated from proto/BuffInfo.proto</summary>
  public static partial class BuffInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/BuffInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuffInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwcm90by9CdWZmSW5mby5wcm90bxIIQnVmZkluZm8ikgEKCEJ1ZmZJbmZv",
            "EjEKDGJ1ZmZfY29uZmlncxgBIAMoCzIbLkJ1ZmZJbmZvLkJ1ZmZJbmZvLkJ1",
            "ZmZJdGVtGlMKCEJ1ZmZJdGVtEg4KBmJ1ZmZJZBgBIAEoAxITCgtjb25kaXRp",
            "b25JZBgCIAEoAxIPCgdjb250ZW50GAMgASgJEhEKCWRlbHRhVGltZRgEIAEo",
            "A2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BuffInfo.BuffInfo), global::BuffInfo.BuffInfo.Parser, new[]{ "BuffConfigs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::BuffInfo.BuffInfo.Types.BuffItem), global::BuffInfo.BuffInfo.Types.BuffItem.Parser, new[]{ "BuffId", "ConditionId", "Content", "DeltaTime" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// @wrapper buff配置表(BuffInfo.pb.json)
  /// </summary>
  public sealed partial class BuffInfo : pb::IMessage<BuffInfo> {
    private static readonly pb::MessageParser<BuffInfo> _parser = new pb::MessageParser<BuffInfo>(() => new BuffInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuffInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuffInfo.BuffInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffInfo(BuffInfo other) : this() {
      buffConfigs_ = other.buffConfigs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffInfo Clone() {
      return new BuffInfo(this);
    }

    /// <summary>Field number for the "buff_configs" field.</summary>
    public const int BuffConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BuffInfo.BuffInfo.Types.BuffItem> _repeated_buffConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::BuffInfo.BuffInfo.Types.BuffItem.Parser);
    private readonly pbc::RepeatedField<global::BuffInfo.BuffInfo.Types.BuffItem> buffConfigs_ = new pbc::RepeatedField<global::BuffInfo.BuffInfo.Types.BuffItem>();
    /// <summary>
    /// @name Buff配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BuffInfo.BuffInfo.Types.BuffItem> BuffConfigs {
      get { return buffConfigs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuffInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuffInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buffConfigs_.Equals(other.buffConfigs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buffConfigs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buffConfigs_.WriteTo(output, _repeated_buffConfigs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buffConfigs_.CalculateSize(_repeated_buffConfigs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuffInfo other) {
      if (other == null) {
        return;
      }
      buffConfigs_.Add(other.buffConfigs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buffConfigs_.AddEntriesFrom(input, _repeated_buffConfigs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuffInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class BuffItem : pb::IMessage<BuffItem> {
        private static readonly pb::MessageParser<BuffItem> _parser = new pb::MessageParser<BuffItem>(() => new BuffItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BuffItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::BuffInfo.BuffInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffItem(BuffItem other) : this() {
          buffId_ = other.buffId_;
          conditionId_ = other.conditionId_;
          content_ = other.content_;
          deltaTime_ = other.deltaTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BuffItem Clone() {
          return new BuffItem(this);
        }

        /// <summary>Field number for the "buffId" field.</summary>
        public const int BuffIdFieldNumber = 1;
        private long buffId_;
        /// <summary>
        /// @name Id
        /// @key
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long BuffId {
          get { return buffId_; }
          set {
            buffId_ = value;
          }
        }

        /// <summary>Field number for the "conditionId" field.</summary>
        public const int ConditionIdFieldNumber = 2;
        private long conditionId_;
        /// <summary>
        /// @name 条件id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConditionId {
          get { return conditionId_; }
          set {
            conditionId_ = value;
          }
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 3;
        private string content_ = "";
        /// <summary>
        /// @name 浮窗文本
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deltaTime" field.</summary>
        public const int DeltaTimeFieldNumber = 4;
        private long deltaTime_;
        /// <summary>
        /// @name 时间影响
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long DeltaTime {
          get { return deltaTime_; }
          set {
            deltaTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BuffItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BuffItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BuffId != other.BuffId) return false;
          if (ConditionId != other.ConditionId) return false;
          if (Content != other.Content) return false;
          if (DeltaTime != other.DeltaTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BuffId != 0L) hash ^= BuffId.GetHashCode();
          if (ConditionId != 0L) hash ^= ConditionId.GetHashCode();
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (DeltaTime != 0L) hash ^= DeltaTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (BuffId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(BuffId);
          }
          if (ConditionId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ConditionId);
          }
          if (Content.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Content);
          }
          if (DeltaTime != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(DeltaTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BuffId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuffId);
          }
          if (ConditionId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConditionId);
          }
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
          }
          if (DeltaTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeltaTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BuffItem other) {
          if (other == null) {
            return;
          }
          if (other.BuffId != 0L) {
            BuffId = other.BuffId;
          }
          if (other.ConditionId != 0L) {
            ConditionId = other.ConditionId;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.DeltaTime != 0L) {
            DeltaTime = other.DeltaTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BuffId = input.ReadInt64();
                break;
              }
              case 16: {
                ConditionId = input.ReadInt64();
                break;
              }
              case 26: {
                Content = input.ReadString();
                break;
              }
              case 32: {
                DeltaTime = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
