// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/Effect.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Effect {

  /// <summary>Holder for reflection information generated from proto/Effect.proto</summary>
  public static partial class EffectReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/Effect.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EffectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJwcm90by9FZmZlY3QucHJvdG8SBkVmZmVjdCJ/CgZFZmZlY3QSMAoNZWZm",
            "ZWN0X2NvbmZpZxgBIAMoCzIZLkVmZmVjdC5FZmZlY3QuRWZmZWN0SXRlbRpD",
            "CgpFZmZlY3RJdGVtEhAKCGVmZmVjdElkGAEgASgDEhQKDGJhc2VFZmZlY3RJ",
            "ZBgCIAEoAxINCgVwYXJhcxgDIAMoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Effect.Effect), global::Effect.Effect.Parser, new[]{ "EffectConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Effect.Effect.Types.EffectItem), global::Effect.Effect.Types.EffectItem.Parser, new[]{ "EffectId", "BaseEffectId", "Paras" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// @wrapper 应用效果表(Effect.pb.json)
  /// </summary>
  public sealed partial class Effect : pb::IMessage<Effect> {
    private static readonly pb::MessageParser<Effect> _parser = new pb::MessageParser<Effect>(() => new Effect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Effect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Effect.EffectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Effect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Effect(Effect other) : this() {
      effectConfig_ = other.effectConfig_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Effect Clone() {
      return new Effect(this);
    }

    /// <summary>Field number for the "effect_config" field.</summary>
    public const int EffectConfigFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Effect.Effect.Types.EffectItem> _repeated_effectConfig_codec
        = pb::FieldCodec.ForMessage(10, global::Effect.Effect.Types.EffectItem.Parser);
    private readonly pbc::RepeatedField<global::Effect.Effect.Types.EffectItem> effectConfig_ = new pbc::RepeatedField<global::Effect.Effect.Types.EffectItem>();
    /// <summary>
    ///@name 应用效果表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Effect.Effect.Types.EffectItem> EffectConfig {
      get { return effectConfig_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Effect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Effect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!effectConfig_.Equals(other.effectConfig_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= effectConfig_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      effectConfig_.WriteTo(output, _repeated_effectConfig_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += effectConfig_.CalculateSize(_repeated_effectConfig_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Effect other) {
      if (other == null) {
        return;
      }
      effectConfig_.Add(other.effectConfig_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            effectConfig_.AddEntriesFrom(input, _repeated_effectConfig_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Effect message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EffectItem : pb::IMessage<EffectItem> {
        private static readonly pb::MessageParser<EffectItem> _parser = new pb::MessageParser<EffectItem>(() => new EffectItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EffectItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Effect.Effect.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EffectItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EffectItem(EffectItem other) : this() {
          effectId_ = other.effectId_;
          baseEffectId_ = other.baseEffectId_;
          paras_ = other.paras_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EffectItem Clone() {
          return new EffectItem(this);
        }

        /// <summary>Field number for the "effectId" field.</summary>
        public const int EffectIdFieldNumber = 1;
        private long effectId_;
        /// <summary>
        /// @name 效果编号
        /// @key
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long EffectId {
          get { return effectId_; }
          set {
            effectId_ = value;
          }
        }

        /// <summary>Field number for the "baseEffectId" field.</summary>
        public const int BaseEffectIdFieldNumber = 2;
        private long baseEffectId_;
        /// <summary>
        /// @name 基础效果编号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long BaseEffectId {
          get { return baseEffectId_; }
          set {
            baseEffectId_ = value;
          }
        }

        /// <summary>Field number for the "paras" field.</summary>
        public const int ParasFieldNumber = 3;
        private static readonly pb::FieldCodec<int> _repeated_paras_codec
            = pb::FieldCodec.ForInt32(26);
        private readonly pbc::RepeatedField<int> paras_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// @name 参数
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> Paras {
          get { return paras_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EffectItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EffectItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EffectId != other.EffectId) return false;
          if (BaseEffectId != other.BaseEffectId) return false;
          if(!paras_.Equals(other.paras_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EffectId != 0L) hash ^= EffectId.GetHashCode();
          if (BaseEffectId != 0L) hash ^= BaseEffectId.GetHashCode();
          hash ^= paras_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EffectId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(EffectId);
          }
          if (BaseEffectId != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(BaseEffectId);
          }
          paras_.WriteTo(output, _repeated_paras_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EffectId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(EffectId);
          }
          if (BaseEffectId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseEffectId);
          }
          size += paras_.CalculateSize(_repeated_paras_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EffectItem other) {
          if (other == null) {
            return;
          }
          if (other.EffectId != 0L) {
            EffectId = other.EffectId;
          }
          if (other.BaseEffectId != 0L) {
            BaseEffectId = other.BaseEffectId;
          }
          paras_.Add(other.paras_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EffectId = input.ReadInt64();
                break;
              }
              case 16: {
                BaseEffectId = input.ReadInt64();
                break;
              }
              case 26:
              case 24: {
                paras_.AddEntriesFrom(input, _repeated_paras_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
