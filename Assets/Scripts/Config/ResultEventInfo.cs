// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/ResultEventInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ResultEventInfo {

  /// <summary>Holder for reflection information generated from proto/ResultEventInfo.proto</summary>
  public static partial class ResultEventInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/ResultEventInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResultEventInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtwcm90by9SZXN1bHRFdmVudEluZm8ucHJvdG8SD1Jlc3VsdEV2ZW50SW5m",
            "byKEAgoPUmVzdWx0RXZlbnRJbmZvEkwKEnJlc3VsdEV2ZW50X2NvbmZpZxgB",
            "IAMoCzIwLlJlc3VsdEV2ZW50SW5mby5SZXN1bHRFdmVudEluZm8uUmVzdWx0",
            "RXZlbnRJdGVtGqIBCg9SZXN1bHRFdmVudEl0ZW0SEAoIcmVzdWx0SWQYASAB",
            "KAMSDAoEbmFtZRgCIAEoCRIUCgxkZXNjcmlwdGlvbjEYAyABKAkSFAoMZGVz",
            "Y3JpcHRpb24yGAQgASgJEg8KB2J0blRleHQYBSABKAkSEAoIcmVjb3JkSWQY",
            "BiABKAMSDwoHZWZmZWN0cxgHIAMoAxIPCgdwaWN0dXJlGAggASgJYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ResultEventInfo.ResultEventInfo), global::ResultEventInfo.ResultEventInfo.Parser, new[]{ "ResultEventConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem), global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem.Parser, new[]{ "ResultId", "Name", "Description1", "Description2", "BtnText", "RecordId", "Effects", "Picture" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// @wrapper 结果事件配置表(ResultEventInfo.pb.json)
  /// </summary>
  public sealed partial class ResultEventInfo : pb::IMessage<ResultEventInfo> {
    private static readonly pb::MessageParser<ResultEventInfo> _parser = new pb::MessageParser<ResultEventInfo>(() => new ResultEventInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultEventInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ResultEventInfo.ResultEventInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultEventInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultEventInfo(ResultEventInfo other) : this() {
      resultEventConfig_ = other.resultEventConfig_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultEventInfo Clone() {
      return new ResultEventInfo(this);
    }

    /// <summary>Field number for the "resultEvent_config" field.</summary>
    public const int ResultEventConfigFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem> _repeated_resultEventConfig_codec
        = pb::FieldCodec.ForMessage(10, global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem.Parser);
    private readonly pbc::RepeatedField<global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem> resultEventConfig_ = new pbc::RepeatedField<global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem>();
    /// <summary>
    /// @name 结果事件配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ResultEventInfo.ResultEventInfo.Types.ResultEventItem> ResultEventConfig {
      get { return resultEventConfig_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultEventInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultEventInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resultEventConfig_.Equals(other.resultEventConfig_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resultEventConfig_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resultEventConfig_.WriteTo(output, _repeated_resultEventConfig_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resultEventConfig_.CalculateSize(_repeated_resultEventConfig_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultEventInfo other) {
      if (other == null) {
        return;
      }
      resultEventConfig_.Add(other.resultEventConfig_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resultEventConfig_.AddEntriesFrom(input, _repeated_resultEventConfig_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResultEventInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ResultEventItem : pb::IMessage<ResultEventItem> {
        private static readonly pb::MessageParser<ResultEventItem> _parser = new pb::MessageParser<ResultEventItem>(() => new ResultEventItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResultEventItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::ResultEventInfo.ResultEventInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResultEventItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResultEventItem(ResultEventItem other) : this() {
          resultId_ = other.resultId_;
          name_ = other.name_;
          description1_ = other.description1_;
          description2_ = other.description2_;
          btnText_ = other.btnText_;
          recordId_ = other.recordId_;
          effects_ = other.effects_.Clone();
          picture_ = other.picture_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResultEventItem Clone() {
          return new ResultEventItem(this);
        }

        /// <summary>Field number for the "resultId" field.</summary>
        public const int ResultIdFieldNumber = 1;
        private long resultId_;
        /// <summary>
        /// @name 事件编号
        /// @key
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ResultId {
          get { return resultId_; }
          set {
            resultId_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// @name 事件名称
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description1" field.</summary>
        public const int Description1FieldNumber = 3;
        private string description1_ = "";
        /// <summary>
        /// @name 事件描述1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description1 {
          get { return description1_; }
          set {
            description1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description2" field.</summary>
        public const int Description2FieldNumber = 4;
        private string description2_ = "";
        /// <summary>
        /// @name 事件描述2
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description2 {
          get { return description2_; }
          set {
            description2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "btnText" field.</summary>
        public const int BtnTextFieldNumber = 5;
        private string btnText_ = "";
        /// <summary>
        /// @name 按钮文字
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BtnText {
          get { return btnText_; }
          set {
            btnText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "recordId" field.</summary>
        public const int RecordIdFieldNumber = 6;
        private long recordId_;
        /// <summary>
        /// @name 结果记录
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RecordId {
          get { return recordId_; }
          set {
            recordId_ = value;
          }
        }

        /// <summary>Field number for the "effects" field.</summary>
        public const int EffectsFieldNumber = 7;
        private static readonly pb::FieldCodec<long> _repeated_effects_codec
            = pb::FieldCodec.ForInt64(58);
        private readonly pbc::RepeatedField<long> effects_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// @name 效果
        /// @style inline
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> Effects {
          get { return effects_; }
        }

        /// <summary>Field number for the "picture" field.</summary>
        public const int PictureFieldNumber = 8;
        private string picture_ = "";
        /// <summary>
        /// @name 图片
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Picture {
          get { return picture_; }
          set {
            picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ResultEventItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResultEventItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ResultId != other.ResultId) return false;
          if (Name != other.Name) return false;
          if (Description1 != other.Description1) return false;
          if (Description2 != other.Description2) return false;
          if (BtnText != other.BtnText) return false;
          if (RecordId != other.RecordId) return false;
          if(!effects_.Equals(other.effects_)) return false;
          if (Picture != other.Picture) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ResultId != 0L) hash ^= ResultId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description1.Length != 0) hash ^= Description1.GetHashCode();
          if (Description2.Length != 0) hash ^= Description2.GetHashCode();
          if (BtnText.Length != 0) hash ^= BtnText.GetHashCode();
          if (RecordId != 0L) hash ^= RecordId.GetHashCode();
          hash ^= effects_.GetHashCode();
          if (Picture.Length != 0) hash ^= Picture.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ResultId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(ResultId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description1.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description1);
          }
          if (Description2.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Description2);
          }
          if (BtnText.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(BtnText);
          }
          if (RecordId != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(RecordId);
          }
          effects_.WriteTo(output, _repeated_effects_codec);
          if (Picture.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Picture);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ResultId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ResultId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description1.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description1);
          }
          if (Description2.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description2);
          }
          if (BtnText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BtnText);
          }
          if (RecordId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RecordId);
          }
          size += effects_.CalculateSize(_repeated_effects_codec);
          if (Picture.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResultEventItem other) {
          if (other == null) {
            return;
          }
          if (other.ResultId != 0L) {
            ResultId = other.ResultId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description1.Length != 0) {
            Description1 = other.Description1;
          }
          if (other.Description2.Length != 0) {
            Description2 = other.Description2;
          }
          if (other.BtnText.Length != 0) {
            BtnText = other.BtnText;
          }
          if (other.RecordId != 0L) {
            RecordId = other.RecordId;
          }
          effects_.Add(other.effects_);
          if (other.Picture.Length != 0) {
            Picture = other.Picture;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ResultId = input.ReadInt64();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description1 = input.ReadString();
                break;
              }
              case 34: {
                Description2 = input.ReadString();
                break;
              }
              case 42: {
                BtnText = input.ReadString();
                break;
              }
              case 48: {
                RecordId = input.ReadInt64();
                break;
              }
              case 58:
              case 56: {
                effects_.AddEntriesFrom(input, _repeated_effects_codec);
                break;
              }
              case 66: {
                Picture = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
